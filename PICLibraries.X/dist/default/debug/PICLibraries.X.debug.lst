

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jul 27 15:22:55 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F13K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _ANSELHbits	set	3967
    18  0000                     _BAUDCON	set	4024
    19  0000                     _INTCON	set	4082
    20  0000                     _RCREG	set	4014
    21  0000                     _RCSTA	set	4011
    22  0000                     _RCSTAbits	set	4011
    23  0000                     _SPBRG	set	4015
    24  0000                     _SPBRGH	set	4016
    25  0000                     _SSPBUF	set	4041
    26  0000                     _SSPCON1	set	4038
    27  0000                     _SSPCON1bits	set	4038
    28  0000                     _SSPSTAT	set	4039
    29  0000                     _SSPSTATbits	set	4039
    30  0000                     _TRISBbits	set	3987
    31  0000                     _TRISCbits	set	3988
    32  0000                     _TXREG	set	4013
    33  0000                     _TXSTA	set	4012
    34  0000                     _RCIE	set	31981
    35  0000                     _RCIF	set	31989
    36  0000                     _SSPIF	set	31987
    37  0000                     _TXIE	set	31980
    38  0000                     _TXIF	set	31988
    39                           
    40 ;;
    41 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    42 ;;
    43 ;; *************** function _main *****************
    44 ;; Defined at:
    45 ;;		line 66 in file "main.c"
    46 ;; Parameters:    Size  Location     Type
    47 ;;		None
    48 ;; Auto vars:     Size  Location     Type
    49 ;;  byte            1   25[COMRAM] unsigned char 
    50 ;;  i               1    0        char 
    51 ;; Return value:  Size  Location     Type
    52 ;;                  2   19[None  ] int 
    53 ;; Registers used:
    54 ;;		wreg, status,2, cstack
    55 ;; Tracked objects:
    56 ;;		On entry : 0/0
    57 ;;		On exit  : 0/0
    58 ;;		Unchanged: 0/0
    59 ;; Data sizes:     COMRAM   BANK0
    60 ;;      Params:         0       0
    61 ;;      Locals:         1       0
    62 ;;      Temps:          0       0
    63 ;;      Totals:         1       0
    64 ;;Total ram usage:        1 bytes
    65 ;; Hardware stack levels required when called:    3
    66 ;; This function calls:
    67 ;;		_serial_get_byte
    68 ;;		_serial_send_byte
    69 ;;		_setup_simple_serial
    70 ;; This function is called by:
    71 ;;		Startup code after reset
    72 ;; This function uses a non-reentrant model
    73 ;;
    74                           
    75                           	psect	text0
    76  00010E                     __ptext0:
    77                           	opt stack 0
    78  00010E                     _main:
    79                           	opt stack 28
    80                           
    81                           ;main.c: 69: setup_simple_serial(0x08 | 0x04, 0x81);
    82                           
    83                           ;incstack = 0
    84  00010E  0E00               	movlw	0
    85  000110  6E14               	movwf	setup_simple_serial@baudrate_value+1,c
    86  000112  0E81               	movlw	129
    87  000114  6E13               	movwf	setup_simple_serial@baudrate_value,c
    88  000116  0E0C               	movlw	12
    89  000118  EC4D  F000         	call	_setup_simple_serial
    90                           
    91                           ;main.c: 71: int8_t i;
    92                           ;main.c: 73: serial_send_byte(0xAA);
    93  00011C  0EAA               	movlw	170
    94  00011E  ECA5  F000         	call	_serial_send_byte
    95  000122  D000               	goto	l1186
    96  000124                     l1186:
    97                           
    98                           ;main.c: 76: uint8_t byte = serial_get_byte();
    99  000124  ECB3  F000         	call	_serial_get_byte	;wreg free
   100  000128  6E1A               	movwf	main@byte,c
   101                           
   102                           ;main.c: 77: serial_send_byte(byte);
   103  00012A  501A               	movf	main@byte,w,c
   104  00012C  ECA5  F000         	call	_serial_send_byte
   105  000130  D7F9               	goto	l1186
   106  000132  D7FF               	goto	l24
   107                           
   108                           ;main.c: 82: return (0);
   109                           ;	Return value of _main is never used
   110  000134  EF4B  F000         	goto	start
   111  000138                     __end_of_main:
   112                           	opt stack 0
   113                           
   114                           	psect	cinit
   115  000138                     __pcinit:
   116                           	opt stack 0
   117  000138                     start_initialization:
   118                           	opt stack 0
   119  000138                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (7 bytes)
   123  000138  EE00  F01B         	lfsr	0,__pbssCOMRAM
   124  00013C  0E07               	movlw	7
   125  00013E                     clear_0:
   126  00013E  6AEE               	clrf	postinc0,c
   127  000140  06E8               	decf	wreg,f,c
   128  000142  E1FD               	bnz	clear_0
   129  000144                     end_of_initialization:
   130                           	opt stack 0
   131  000144                     __end_of__initialization:
   132                           	opt stack 0
   133  000144  0100               	movlb	0
   134  000146  EF87  F000         	goto	_main	;jump to C main() function
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           
   138                           	psect	bssCOMRAM
   139  00001B                     __pbssCOMRAM:
   140                           	opt stack 0
   141  00001B                     _interrupt_data:
   142                           	opt stack 0
   143  00001B                     	ds	6
   144  000021                     _dummy_byte:
   145                           	opt stack 0
   146  000021                     	ds	1
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	cstackCOMRAM
   151  000001                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000001                     i2serial_send_byte@byte:
   154                           	opt stack 0
   155  000001                     serial_peek_receive@byte:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159  000001                     	ds	2
   160  000003                     serial_peek_receive@get_byte:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x2
   164  000003                     	ds	1
   165  000004                     ??_isr:
   166                           
   167                           ; 0 bytes @ 0x3
   168  000004                     	ds	14
   169  000012                     isr@byte:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x11
   173  000012                     	ds	1
   174  000013                     serial_send_byte@byte:
   175                           	opt stack 0
   176  000013                     setup_simple_serial@baudrate_value:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x12
   180  000013                     	ds	2
   181  000015                     _setup_simple_serial$492:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x14
   185  000015                     	ds	2
   186  000017                     _setup_simple_serial$493:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x16
   190  000017                     	ds	2
   191  000019                     setup_simple_serial@baudrate_bits:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x18
   195  000019                     	ds	1
   196  00001A                     main@byte:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x19
   200  00001A                     	ds	1
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204 ;; *************** function _setup_simple_serial *****************
   205 ;; Defined at:
   206 ;;		line 28 in file "serial_pic.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;  baudrate_bit    1    wreg     unsigned char 
   209 ;;  baudrate_val    2   18[COMRAM] unsigned int 
   210 ;; Auto vars:     Size  Location     Type
   211 ;;  baudrate_bit    1   24[COMRAM] unsigned char 
   212 ;; Return value:  Size  Location     Type
   213 ;;		None               void
   214 ;; Registers used:
   215 ;;		wreg, status,2
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK0
   221 ;;      Params:         2       0
   222 ;;      Locals:         5       0
   223 ;;      Temps:          0       0
   224 ;;      Totals:         7       0
   225 ;;Total ram usage:        7 bytes
   226 ;; Hardware stack levels used:    1
   227 ;; Hardware stack levels required when called:    2
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		_main
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text1
   236  00009A                     __ptext1:
   237                           	opt stack 0
   238  00009A                     _setup_simple_serial:
   239                           	opt stack 28
   240                           
   241                           ;incstack = 0
   242                           ;setup_simple_serial@baudrate_bits stored from wreg
   243  00009A  6E19               	movwf	setup_simple_serial@baudrate_bits,c
   244                           
   245                           ;serial_pic.c: 30: ANSELHbits.ANS11 = 0;
   246  00009C  967F               	bcf	3967,3,c	;volatile
   247                           
   248                           ;serial_pic.c: 31: TXSTA = (baudrate_bits & 0x04) ? 0x24: 0x20;
   249  00009E  B419               	btfsc	setup_simple_serial@baudrate_bits,2,c
   250  0000A0  D004               	goto	l1144
   251  0000A2  0E00               	movlw	0
   252  0000A4  6E16               	movwf	_setup_simple_serial$492+1,c
   253  0000A6  0E20               	movlw	32
   254  0000A8  D003               	goto	L1
   255  0000AA                     l1144:
   256  0000AA  0E00               	movlw	0
   257  0000AC  6E16               	movwf	_setup_simple_serial$492+1,c
   258  0000AE  0E24               	movlw	36
   259  0000B0                     L1:
   260  0000B0  6E15               	movwf	_setup_simple_serial$492,c
   261  0000B2  D000               	goto	l1146
   262  0000B4                     l1146:
   263  0000B4  C015  FFAC         	movff	_setup_simple_serial$492,4012	;volatile
   264                           
   265                           ;serial_pic.c: 32: RCSTA = 0x90;
   266  0000B8  0E90               	movlw	144
   267  0000BA  6EAB               	movwf	4011,c	;volatile
   268                           
   269                           ;serial_pic.c: 33: BAUDCON = (baudrate_bits & 0x08) ? 0x08 : 0x00;
   270  0000BC  B619               	btfsc	setup_simple_serial@baudrate_bits,3,c
   271  0000BE  D004               	goto	l1152
   272  0000C0  0E00               	movlw	0
   273  0000C2  6E18               	movwf	_setup_simple_serial$493+1,c
   274  0000C4  0E00               	movlw	0
   275  0000C6  D003               	goto	L2
   276  0000C8                     l1152:
   277  0000C8  0E00               	movlw	0
   278  0000CA  6E18               	movwf	_setup_simple_serial$493+1,c
   279  0000CC  0E08               	movlw	8
   280  0000CE                     L2:
   281  0000CE  6E17               	movwf	_setup_simple_serial$493,c
   282  0000D0  D000               	goto	l1154
   283  0000D2                     l1154:
   284  0000D2  C017  FFB8         	movff	_setup_simple_serial$493,4024	;volatile
   285                           
   286                           ;serial_pic.c: 35: SPBRGH = baudrate_value >> 8;
   287  0000D6  5014               	movf	setup_simple_serial@baudrate_value+1,w,c
   288  0000D8  6EB0               	movwf	4016,c	;volatile
   289                           
   290                           ;serial_pic.c: 36: SPBRG = baudrate_value;
   291  0000DA  C013  FFAF         	movff	setup_simple_serial@baudrate_value,4015	;volatile
   292  0000DE  0012               	return		;funcret
   293  0000E0                     __end_of_setup_simple_serial:
   294                           	opt stack 0
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298 ;; *************** function _serial_send_byte *****************
   299 ;; Defined at:
   300 ;;		line 76 in file "serial_pic.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;  byte            1    wreg     unsigned char 
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  byte            1   18[COMRAM] unsigned char 
   305 ;; Return value:  Size  Location     Type
   306 ;;		None               void
   307 ;; Registers used:
   308 ;;		wreg
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0
   314 ;;      Params:         0       0
   315 ;;      Locals:         1       0
   316 ;;      Temps:          0       0
   317 ;;      Totals:         1       0
   318 ;;Total ram usage:        1 bytes
   319 ;; Hardware stack levels used:    1
   320 ;; Hardware stack levels required when called:    2
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;;		_serial_send_data
   326 ;;		_serial_send_buffer
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text2
   331  00014A                     __ptext2:
   332                           	opt stack 0
   333  00014A                     _serial_send_byte:
   334                           	opt stack 28
   335                           
   336                           ;incstack = 0
   337                           ;serial_send_byte@byte stored from wreg
   338  00014A  6E13               	movwf	serial_send_byte@byte,c
   339                           
   340                           ;serial_pic.c: 78: while (!TXIF);
   341  00014C  D000               	goto	l192
   342  00014E                     l192:
   343  00014E  A89E               	btfss	3998,4,c	;volatile
   344  000150  D7FE               	goto	l192
   345                           
   346                           ;serial_pic.c: 79: TXREG = byte;
   347  000152  C013  FFAD         	movff	serial_send_byte@byte,4013	;volatile
   348  000156  0012               	return		;funcret
   349  000158                     __end_of_serial_send_byte:
   350                           	opt stack 0
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           
   354 ;; *************** function _serial_get_byte *****************
   355 ;; Defined at:
   356 ;;		line 53 in file "serial_pic.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      unsigned char 
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0
   370 ;;      Params:         0       0
   371 ;;      Locals:         0       0
   372 ;;      Temps:          0       0
   373 ;;      Totals:         0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; Hardware stack levels required when called:    2
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;;		_serial_get_data
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text3
   386  000166                     __ptext3:
   387                           	opt stack 0
   388  000166                     _serial_get_byte:
   389                           	opt stack 28
   390                           
   391                           ;serial_pic.c: 55: while (!RCIF);
   392                           
   393                           ;incstack = 0
   394  000166  D000               	goto	l175
   395  000168                     l175:
   396  000168  AA9E               	btfss	3998,5,c	;volatile
   397  00016A  D7FE               	goto	l175
   398                           
   399                           ;serial_pic.c: 57: return RCREG;
   400  00016C  50AE               	movf	4014,w,c	;volatile
   401  00016E  0012               	return	
   402  000170  0012               	return		;funcret
   403  000172                     __end_of_serial_get_byte:
   404                           	opt stack 0
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           
   408 ;; *************** function _isr *****************
   409 ;; Defined at:
   410 ;;		line 85 in file "main.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  byte            1   17[COMRAM] unsigned char 
   415 ;; Return value:  Size  Location     Type
   416 ;;		None               void
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0
   424 ;;      Params:         0       0
   425 ;;      Locals:         1       0
   426 ;;      Temps:         14       0
   427 ;;      Totals:        15       0
   428 ;;Total ram usage:       15 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    1
   431 ;; This function calls:
   432 ;;		_serial_peek_receive
   433 ;;		i2_serial_send_byte
   434 ;; This function is called by:
   435 ;;		Interrupt level 2
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	intcode
   440  000008                     __pintcode:
   441                           	opt stack 0
   442  000008                     _isr:
   443                           	opt stack 28
   444                           
   445                           ;incstack = 0
   446  000008  CFFA F004          	movff	pclath,??_isr
   447  00000C  CFFB F005          	movff	pclatu,??_isr+1
   448  000010  CFE9 F006          	movff	fsr0l,??_isr+2
   449  000014  CFEA F007          	movff	fsr0h,??_isr+3
   450  000018  CFE1 F008          	movff	fsr1l,??_isr+4
   451  00001C  CFE2 F009          	movff	fsr1h,??_isr+5
   452  000020  CFD9 F00A          	movff	fsr2l,??_isr+6
   453  000024  CFDA F00B          	movff	fsr2h,??_isr+7
   454  000028  CFF3 F00C          	movff	prodl,??_isr+8
   455  00002C  CFF4 F00D          	movff	prodh,??_isr+9
   456  000030  CFF6 F00E          	movff	tblptrl,??_isr+10
   457  000034  CFF7 F00F          	movff	tblptrh,??_isr+11
   458  000038  CFF8 F010          	movff	tblptru,??_isr+12
   459  00003C  CFF5 F011          	movff	tablat,??_isr+13
   460                           
   461                           ;main.c: 87: uint8_t byte;
   462                           ;main.c: 88: if (serial_peek_receive(1, &byte))
   463  000040  0E12               	movlw	low isr@byte
   464  000042  6E01               	movwf	serial_peek_receive@byte,c
   465  000044  0E00               	movlw	high isr@byte
   466  000046  6E02               	movwf	serial_peek_receive@byte+1,c
   467  000048  0E01               	movlw	1
   468  00004A  EC70  F000         	call	_serial_peek_receive
   469  00004E  0900               	iorlw	0
   470  000050  B4D8               	btfsc	status,2,c
   471  000052  D004               	goto	i2l30
   472                           
   473                           ;main.c: 89: serial_send_byte(byte);
   474  000054  5012               	movf	isr@byte,w,c
   475  000056  ECAC  F000         	call	i2_serial_send_byte
   476  00005A  D000               	goto	i2l30
   477  00005C                     i2l30:
   478  00005C  C011  FFF5         	movff	??_isr+13,tablat
   479  000060  C010  FFF8         	movff	??_isr+12,tblptru
   480  000064  C00F  FFF7         	movff	??_isr+11,tblptrh
   481  000068  C00E  FFF6         	movff	??_isr+10,tblptrl
   482  00006C  C00D  FFF4         	movff	??_isr+9,prodh
   483  000070  C00C  FFF3         	movff	??_isr+8,prodl
   484  000074  C00B  FFDA         	movff	??_isr+7,fsr2h
   485  000078  C00A  FFD9         	movff	??_isr+6,fsr2l
   486  00007C  C009  FFE2         	movff	??_isr+5,fsr1h
   487  000080  C008  FFE1         	movff	??_isr+4,fsr1l
   488  000084  C007  FFEA         	movff	??_isr+3,fsr0h
   489  000088  C006  FFE9         	movff	??_isr+2,fsr0l
   490  00008C  C005  FFFB         	movff	??_isr+1,pclatu
   491  000090  C004  FFFA         	movff	??_isr,pclath
   492  000094  0011               	retfie		f
   493  000096                     __end_of_isr:
   494                           	opt stack 0
   495                           pclatu	equ	0xFFB
   496                           pclath	equ	0xFFA
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           prodh	equ	0xFF4
   502                           prodl	equ	0xFF3
   503                           postinc0	equ	0xFEE
   504                           fsr0h	equ	0xFEA
   505                           fsr0l	equ	0xFE9
   506                           wreg	equ	0xFE8
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           fsr2h	equ	0xFDA
   510                           fsr2l	equ	0xFD9
   511                           status	equ	0xFD8
   512                           
   513 ;; *************** function i2_serial_send_byte *****************
   514 ;; Defined at:
   515 ;;		line 76 in file "serial_pic.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  byte            1    wreg     unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  byte            1    0[COMRAM] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;		None               void
   522 ;; Registers used:
   523 ;;		wreg
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0
   529 ;;      Params:         0       0
   530 ;;      Locals:         1       0
   531 ;;      Temps:          0       0
   532 ;;      Totals:         1       0
   533 ;;Total ram usage:        1 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_isr
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text5
   543  000158                     __ptext5:
   544                           	opt stack 0
   545  000158                     i2_serial_send_byte:
   546                           	opt stack 28
   547                           
   548                           ;incstack = 0
   549                           ;i2serial_send_byte@byte stored from wreg
   550  000158  6E01               	movwf	i2serial_send_byte@byte,c
   551                           
   552                           ;serial_pic.c: 78: while (!TXIF);
   553  00015A  D000               	goto	i2l192
   554  00015C                     i2l192:
   555  00015C  A89E               	btfss	3998,4,c	;volatile
   556  00015E  D7FE               	goto	i2l192
   557                           
   558                           ;serial_pic.c: 79: TXREG = byte;
   559  000160  C001  FFAD         	movff	i2serial_send_byte@byte,4013	;volatile
   560  000164  0012               	return		;funcret
   561  000166                     __end_ofi2_serial_send_byte:
   562                           	opt stack 0
   563                           pclatu	equ	0xFFB
   564                           pclath	equ	0xFFA
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           prodh	equ	0xFF4
   570                           prodl	equ	0xFF3
   571                           postinc0	equ	0xFEE
   572                           fsr0h	equ	0xFEA
   573                           fsr0l	equ	0xFE9
   574                           wreg	equ	0xFE8
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           fsr2h	equ	0xFDA
   578                           fsr2l	equ	0xFD9
   579                           status	equ	0xFD8
   580                           
   581 ;; *************** function _serial_peek_receive *****************
   582 ;; Defined at:
   583 ;;		line 39 in file "serial_pic.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  get_byte        1    wreg     unsigned char 
   586 ;;  byte            2    0[COMRAM] PTR unsigned char 
   587 ;;		 -> isr@byte(1), 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  get_byte        1    2[COMRAM] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      unsigned char 
   592 ;; Registers used:
   593 ;;		wreg, fsr2l, fsr2h, status,2
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0
   599 ;;      Params:         2       0
   600 ;;      Locals:         1       0
   601 ;;      Temps:          0       0
   602 ;;      Totals:         3       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_isr
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text6
   613  0000E0                     __ptext6:
   614                           	opt stack 0
   615  0000E0                     _serial_peek_receive:
   616                           	opt stack 28
   617                           
   618                           ;incstack = 0
   619                           ;serial_peek_receive@get_byte stored from wreg
   620  0000E0  6E03               	movwf	serial_peek_receive@get_byte,c
   621                           
   622                           ;serial_pic.c: 41: if (get_byte) {
   623  0000E2  5003               	movf	serial_peek_receive@get_byte,w,c
   624  0000E4  B4D8               	btfsc	status,2,c
   625  0000E6  D00E               	goto	i2l1174
   626                           
   627                           ;serial_pic.c: 42: if (RCIF) {
   628  0000E8  AA9E               	btfss	3998,5,c	;volatile
   629  0000EA  D009               	goto	i2l1170
   630                           
   631                           ;serial_pic.c: 43: *byte = RCREG;
   632  0000EC  C001  FFD9         	movff	serial_peek_receive@byte,fsr2l
   633  0000F0  C002  FFDA         	movff	serial_peek_receive@byte+1,fsr2h
   634  0000F4  CFAE FFDF          	movff	4014,indf2	;volatile
   635                           
   636                           ;serial_pic.c: 44: return 1;
   637  0000F8  0E01               	movlw	1
   638  0000FA  0012               	return	
   639                           
   640                           ;serial_pic.c: 45: } else {
   641  0000FC  D003               	goto	i2l1174
   642  0000FE                     i2l1170:
   643                           
   644                           ;serial_pic.c: 46: return 0;
   645  0000FE  0E00               	movlw	0
   646  000100  0012               	return	
   647  000102  D000               	goto	i2l1174
   648  000104                     i2l1174:
   649                           
   650                           ;serial_pic.c: 47: }
   651                           ;serial_pic.c: 48: }
   652                           ;serial_pic.c: 50: return (RCIF) ? 1 : 0;
   653  000104  0E00               	movlw	0
   654  000106  BA9E               	btfsc	3998,5,c	;volatile
   655  000108  0E01               	movlw	1
   656  00010A  0012               	return	
   657  00010C  0012               	return		;funcret
   658  00010E                     __end_of_serial_peek_receive:
   659                           	opt stack 0
   660  0000                     pclatu	equ	0xFFB
   661                           pclath	equ	0xFFA
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           prodh	equ	0xFF4
   667                           prodl	equ	0xFF3
   668                           postinc0	equ	0xFEE
   669                           fsr0h	equ	0xFEA
   670                           fsr0l	equ	0xFE9
   671                           wreg	equ	0xFE8
   672                           fsr1h	equ	0xFE2
   673                           fsr1l	equ	0xFE1
   674                           indf2	equ	0xFDF
   675                           fsr2h	equ	0xFDA
   676                           fsr2l	equ	0xFD9
   677                           status	equ	0xFD8
   678                           pclatu	equ	0xFFB
   679                           pclath	equ	0xFFA
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           prodh	equ	0xFF4
   685                           prodl	equ	0xFF3
   686                           postinc0	equ	0xFEE
   687                           fsr0h	equ	0xFEA
   688                           fsr0l	equ	0xFE9
   689                           wreg	equ	0xFE8
   690                           fsr1h	equ	0xFE2
   691                           fsr1l	equ	0xFE1
   692                           indf2	equ	0xFDF
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           status	equ	0xFD8
   696                           
   697                           	psect	rparam
   698  0000                     pclatu	equ	0xFFB
   699                           pclath	equ	0xFFA
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           prodh	equ	0xFF4
   705                           prodl	equ	0xFF3
   706                           postinc0	equ	0xFEE
   707                           fsr0h	equ	0xFEA
   708                           fsr0l	equ	0xFE9
   709                           wreg	equ	0xFE8
   710                           fsr1h	equ	0xFE2
   711                           fsr1l	equ	0xFE1
   712                           indf2	equ	0xFDF
   713                           fsr2h	equ	0xFDA
   714                           fsr2l	equ	0xFD9
   715                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      33
    BANK0           160      0       0

Pointer List with Targets:

    serial_peek_receive@byte	PTR unsigned char  size(2) Largest target is 1
		 -> isr@byte(COMRAM[1]), 

    S391interrupt_serial$data	PTR unsigned char  size(2) Largest target is 0

    interrupt_data.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_setup_simple_serial

Critical Paths under _isr in COMRAM

    _isr->_serial_peek_receive

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     227
                                             25 COMRAM     1     1      0
                    _serial_get_byte
                   _serial_send_byte
                _setup_simple_serial
 ---------------------------------------------------------------------------------
 (1) _setup_simple_serial                                  7     5      2     189
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _serial_send_byte                                     1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serial_get_byte                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 15    15      0     165
                                              3 COMRAM    15    15      0
                _serial_peek_receive
                 i2_serial_send_byte
 ---------------------------------------------------------------------------------
 (3) i2_serial_send_byte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serial_peek_receive                                  3     1      2      97
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _serial_get_byte
   _serial_send_byte
   _setup_simple_serial

 _isr (ROOT)
   _serial_peek_receive
   i2_serial_send_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       3        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      21       1       34.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21       4        0.0%
DATA                 0      0      21       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jul 27 15:22:55 2015

                      _SSPSTATbits 000FC7                                 l24 0132  
       __end_ofi2_serial_send_byte 0166                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                                l175 0168  
                              l192 014E                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                                _isr 0008  
                     __CFG_BORV$19 000000                                wreg 000FE8  
                     __CFG_FOSC$HS 000000                       __CFG_LVP$OFF 000000  
                             l1152 00C8                               l1144 00AA  
                             l1154 00D2                               l1146 00B4  
                             l1186 0124                               ?_isr 0001  
                             _RCIE 007CED                               _RCIF 007CF5  
                             i2l30 005C                               _TXIE 007CEC  
                             _TXIF 007CF4                               _main 010E  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0096                      __CFG_IESO$OFF 000000  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
          __end_of_serial_get_byte 0172                              ??_isr 0004  
                            ?_main 0001                              i2l192 015C  
                            _RCREG 000FAE                     __CFG_BBSIZ$OFF 000000  
                            _RCSTA 000FAB                              _SPBRG 000FAF  
                            _SSPIF 007CF3                              _TXREG 000FAD  
                            _TXSTA 000FAC                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                            tablat 000FF5               serial_send_byte@byte 0013  
                            status 000FD8                     __CFG_HFOFST$ON 000000  
                  __initialization 0138                       __end_of_main 0138  
                   __CFG_PCLKEN$ON 000000                             ??_main 001A  
                    __activetblptr 000000                     __CFG_PLLEN$OFF 000000  
                           i2l1170 00FE                             i2l1174 0104  
                   __CFG_WDTEN$OFF 000000                             _INTCON 000FF2  
                           _SPBRGH 000FB0                             _SSPBUF 000FC9  
         __end_of_serial_send_byte 0158                     __CFG_XINST$OFF 000000  
                   __CFG_STVREN$ON 000000                   ?_serial_get_byte 0001  
                           clear_0 013E        __end_of_setup_simple_serial 00E0  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                         __accesstop 0060  
          __end_of__initialization 0144                      ___rparam_used 000001  
     __size_of_serial_peek_receive 002E                     __pcstackCOMRAM 0001  
               i2_serial_send_byte 0158                ?i2_serial_send_byte 0001  
          serial_peek_receive@byte 0001                            _BAUDCON 000FB8  
             ??i2_serial_send_byte 0001                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                    __CFG_PWRTEN$OFF 000000  
                          __Hparam 0000                            __Lparam 0000  
                       _dummy_byte 0021                            __pcinit 0138  
                          __ramtop 0100                            __ptext0 010E  
                          __ptext1 009A                            __ptext2 014A  
                          __ptext3 0166                            __ptext5 0158  
                          __ptext6 00E0                       __size_of_isr 008E  
             end_of_initialization 0144                            isr@byte 0012  
                ?_serial_send_byte 0001                 ??_serial_send_byte 0013  
                        _RCSTAbits 000FAB                            postinc0 000FEE  
              _serial_peek_receive 00E0                          _TRISBbits 000F93  
                        _TRISCbits 000F94               ?_serial_peek_receive 0001  
         __size_of_serial_get_byte 000C                start_initialization 0138  
                      __end_of_isr 0096       __size_of_setup_simple_serial 0046  
            ??_serial_peek_receive 0003                        __pbssCOMRAM 001B  
                        __pintcode 0008        serial_peek_receive@get_byte 0003  
      __size_ofi2_serial_send_byte 000E   setup_simple_serial@baudrate_bits 0019  
                ??_serial_get_byte 0013             i2serial_send_byte@byte 0001  
                 __CFG_WDTPS$32768 000000          __size_of_serial_send_byte 000E  
                         __Hrparam 0000                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000                _setup_simple_serial 009A  
                       _ANSELHbits 000F7F               ?_setup_simple_serial 0013  
                    __size_of_main 002A                           main@byte 001A  
      __end_of_serial_peek_receive 010E              ??_setup_simple_serial 0015  
                         intlevel2 0000                   _serial_send_byte 014A  
                  _serial_get_byte 0166                     _interrupt_data 001B  
                      _SSPCON1bits 000FC6  setup_simple_serial@baudrate_value 0013  
          _setup_simple_serial$492 0015            _setup_simple_serial$493 0017  
